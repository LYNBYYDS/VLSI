--
-- Generated by VASY
--
ENTITY shifter IS
PORT(
  shift_lsl	: IN BIT;
  shift_lsr	: IN BIT;
  shift_asr	: IN BIT;
  shift_ror	: IN BIT;
  shift_rrx	: IN BIT;
  shift_val	: IN BIT_VECTOR(4 DOWNTO 0);
  din	: IN BIT_VECTOR(31 DOWNTO 0);
  cin	: IN BIT;
  dout	: OUT BIT_VECTOR(31 DOWNTO 0);
  cout	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END shifter;

ARCHITECTURE VBE OF shifter IS

  SIGNAL cout_left	: BIT;
  SIGNAL cout_right	: BIT;
  SIGNAL dout_inter0	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL dout_inter1	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL dout_inter2	: BIT_VECTOR(31 DOWNTO 0);
  SIGNAL dout_inter3	: BIT_VECTOR(31 DOWNTO 0);
BEGIN

  cout <= cout_left WHEN (shift_lsl = '1') ELSE
     cout_right WHEN (((shift_lsr = '1') OR (shift_asr = '1')) OR (shift_ror = '1')) ELSE
     din(0) WHEN (shift_rrx = '1') ELSE
     cin;
  cout_right <= din(0) WHEN (shift_val = "00001") ELSE
     dout_inter0(1) WHEN (shift_val(4 downto 1) = "0001") ELSE
     dout_inter1(3) WHEN (shift_val(4 downto 2) = "001") ELSE
     dout_inter2(7) WHEN (shift_val(4 downto 3) = "01") ELSE
     dout_inter3(15) WHEN (shift_val(4) = '1') ELSE
     '0';
  cout_left <= din(31) WHEN (shift_val = "00001") ELSE
     dout_inter0(30) WHEN (shift_val(4 downto 1) = "0001") ELSE
     dout_inter1(28) WHEN (shift_val(4 downto 2) = "001") ELSE
     dout_inter2(24) WHEN (shift_val(4 downto 3) = "01") ELSE
     dout_inter3(16) WHEN (shift_val(4) = '1') ELSE
     '0';
  dout <= (dout_inter3(15 downto 0) & "0000000000000000") WHEN ((shift_lsl = '1') AND (shift_val(4) = '1')) ELSE
     ("0000000000000000" & dout_inter3(31 downto 16)) WHEN ((shift_lsr = '1') AND (shift_val(4) = '1')) ELSE
     ((((((((((((((((dout_inter3(31) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)
) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)
) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31)
) & dout_inter3(31)) & dout_inter3(31)) & dout_inter3(31 downto 16)) WHEN ((shift_asr = '1') AND (shift_val(4) = '1')) ELSE
     (dout_inter3(15 downto 0) & dout_inter3(31 downto 16)) WHEN ((shift_ror = '1') AND (shift_val(4) = '1')) ELSE
     (cin & dout_inter3(31 downto 1)) WHEN (shift_rrx = '1') ELSE
     dout_inter3;
  dout_inter3 <= (dout_inter2(23 downto 0) & "00000000") WHEN ((shift_lsl = '1') AND (shift_val(3) = '1')) ELSE
     ("00000000" & dout_inter2(31 downto 8)) WHEN ((shift_lsr = '1') AND (shift_val(3) = '1')) ELSE
     ((((((((dout_inter2(31) & dout_inter2(31)) & dout_inter2(31)) & dout_inter2(31)
) & dout_inter2(31)) & dout_inter2(31)) & dout_inter2(31)) & dout_inter2(31)) & dout_inter2(31 downto 8)
) WHEN ((shift_asr = '1') AND (shift_val(3) = '1')) ELSE
     (dout_inter2(7 downto 0) & dout_inter2(31 downto 8)) WHEN ((shift_ror = '1') AND (shift_val(3) = '1')) ELSE
     dout_inter2;
  dout_inter2 <= (dout_inter1(27 downto 0) & "0000") WHEN ((shift_lsl = '1') AND (shift_val(2) = '1')) ELSE
     ("0000" & dout_inter1(31 downto 4)) WHEN ((shift_lsr = '1') AND (shift_val(2) = '1')) ELSE
     ((((dout_inter1(31) & dout_inter1(31)) & dout_inter1(31)) & dout_inter1(31)) & dout_inter1(31 downto 4)
) WHEN ((shift_asr = '1') AND (shift_val(2) = '1')) ELSE
     (dout_inter1(3 downto 0) & dout_inter1(31 downto 4)) WHEN ((shift_ror = '1') AND (shift_val(2) = '1')) ELSE
     dout_inter1;
  dout_inter1 <= (dout_inter0(29 downto 0) & "00") WHEN ((shift_lsl = '1') AND (shift_val(1) = '1')) ELSE
     ("00" & dout_inter0(31 downto 2)) WHEN ((shift_lsr = '1') AND (shift_val(1) = '1')) ELSE
     ((dout_inter0(31) & dout_inter0(31)) & dout_inter0(31 downto 2)) WHEN ((shift_asr = '1') AND (shift_val(1) = '1')) ELSE
     (dout_inter0(1 downto 0) & dout_inter0(31 downto 2)) WHEN ((shift_ror = '1') AND (shift_val(1) = '1')) ELSE
     dout_inter0;
  dout_inter0 <= (din(30 downto 0) & '0') WHEN ((shift_lsl = '1') AND (shift_val(0) = '1')) ELSE
     ('0' & din(31 downto 1)) WHEN ((shift_lsr = '1') AND (shift_val(0) = '1')) ELSE
     (din(31) & din(31 downto 1)) WHEN ((shift_asr = '1') AND (shift_val(0) = '1')) ELSE
     (din(0) & din(31 downto 1)) WHEN ((shift_ror = '1') AND (shift_val(0) = '1')) ELSE
     din;
END VBE;
