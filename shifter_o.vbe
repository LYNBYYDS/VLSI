-- VHDL data flow description generated from `shifter_o`
--		date : Fri Dec  9 15:58:51 2022


-- Entity Declaration

ENTITY shifter_o IS
  PORT (
  shift_lsl : in BIT;	-- shift_lsl
  shift_lsr : in BIT;	-- shift_lsr
  shift_asr : in BIT;	-- shift_asr
  shift_ror : in BIT;	-- shift_ror
  shift_rrx : in BIT;	-- shift_rrx
  shift_val : in bit_vector(4 DOWNTO 0) ;	-- shift_val
  din : in bit_vector(31 DOWNTO 0) ;	-- din
  cin : in BIT;	-- cin
  dout : out bit_vector(31 DOWNTO 0) ;	-- dout
  cout : out BIT;	-- cout
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END shifter_o;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF shifter_o IS
  SIGNAL dout_inter0_31 : BIT;		-- dout_inter0_31
  SIGNAL dout_inter0_30 : BIT;		-- dout_inter0_30
  SIGNAL dout_inter0_29 : BIT;		-- dout_inter0_29
  SIGNAL dout_inter0_28 : BIT;		-- dout_inter0_28
  SIGNAL dout_inter0_27 : BIT;		-- dout_inter0_27
  SIGNAL dout_inter0_26 : BIT;		-- dout_inter0_26
  SIGNAL dout_inter0_25 : BIT;		-- dout_inter0_25
  SIGNAL dout_inter0_24 : BIT;		-- dout_inter0_24
  SIGNAL dout_inter0_23 : BIT;		-- dout_inter0_23
  SIGNAL dout_inter0_22 : BIT;		-- dout_inter0_22
  SIGNAL dout_inter0_21 : BIT;		-- dout_inter0_21
  SIGNAL dout_inter0_20 : BIT;		-- dout_inter0_20
  SIGNAL dout_inter0_19 : BIT;		-- dout_inter0_19
  SIGNAL dout_inter0_18 : BIT;		-- dout_inter0_18
  SIGNAL dout_inter0_17 : BIT;		-- dout_inter0_17
  SIGNAL dout_inter0_16 : BIT;		-- dout_inter0_16
  SIGNAL dout_inter0_15 : BIT;		-- dout_inter0_15
  SIGNAL dout_inter0_14 : BIT;		-- dout_inter0_14
  SIGNAL dout_inter0_13 : BIT;		-- dout_inter0_13
  SIGNAL dout_inter0_12 : BIT;		-- dout_inter0_12
  SIGNAL dout_inter0_11 : BIT;		-- dout_inter0_11
  SIGNAL dout_inter0_10 : BIT;		-- dout_inter0_10
  SIGNAL dout_inter0_9 : BIT;		-- dout_inter0_9
  SIGNAL dout_inter0_8 : BIT;		-- dout_inter0_8
  SIGNAL dout_inter0_7 : BIT;		-- dout_inter0_7
  SIGNAL dout_inter0_6 : BIT;		-- dout_inter0_6
  SIGNAL dout_inter0_5 : BIT;		-- dout_inter0_5
  SIGNAL dout_inter0_4 : BIT;		-- dout_inter0_4
  SIGNAL dout_inter0_3 : BIT;		-- dout_inter0_3
  SIGNAL dout_inter0_2 : BIT;		-- dout_inter0_2
  SIGNAL dout_inter0_1 : BIT;		-- dout_inter0_1
  SIGNAL dout_inter0_0 : BIT;		-- dout_inter0_0
  SIGNAL dout_inter1_31 : BIT;		-- dout_inter1_31
  SIGNAL dout_inter1_30 : BIT;		-- dout_inter1_30
  SIGNAL dout_inter1_29 : BIT;		-- dout_inter1_29
  SIGNAL dout_inter1_28 : BIT;		-- dout_inter1_28
  SIGNAL dout_inter1_27 : BIT;		-- dout_inter1_27
  SIGNAL dout_inter1_26 : BIT;		-- dout_inter1_26
  SIGNAL dout_inter1_25 : BIT;		-- dout_inter1_25
  SIGNAL dout_inter1_24 : BIT;		-- dout_inter1_24
  SIGNAL dout_inter1_23 : BIT;		-- dout_inter1_23
  SIGNAL dout_inter1_22 : BIT;		-- dout_inter1_22
  SIGNAL dout_inter1_21 : BIT;		-- dout_inter1_21
  SIGNAL dout_inter1_20 : BIT;		-- dout_inter1_20
  SIGNAL dout_inter1_19 : BIT;		-- dout_inter1_19
  SIGNAL dout_inter1_18 : BIT;		-- dout_inter1_18
  SIGNAL dout_inter1_17 : BIT;		-- dout_inter1_17
  SIGNAL dout_inter1_16 : BIT;		-- dout_inter1_16
  SIGNAL dout_inter1_15 : BIT;		-- dout_inter1_15
  SIGNAL dout_inter1_14 : BIT;		-- dout_inter1_14
  SIGNAL dout_inter1_13 : BIT;		-- dout_inter1_13
  SIGNAL dout_inter1_12 : BIT;		-- dout_inter1_12
  SIGNAL dout_inter1_11 : BIT;		-- dout_inter1_11
  SIGNAL dout_inter1_10 : BIT;		-- dout_inter1_10
  SIGNAL dout_inter1_9 : BIT;		-- dout_inter1_9
  SIGNAL dout_inter1_8 : BIT;		-- dout_inter1_8
  SIGNAL dout_inter1_7 : BIT;		-- dout_inter1_7
  SIGNAL dout_inter1_6 : BIT;		-- dout_inter1_6
  SIGNAL dout_inter1_5 : BIT;		-- dout_inter1_5
  SIGNAL dout_inter1_4 : BIT;		-- dout_inter1_4
  SIGNAL dout_inter1_3 : BIT;		-- dout_inter1_3
  SIGNAL dout_inter1_2 : BIT;		-- dout_inter1_2
  SIGNAL dout_inter1_1 : BIT;		-- dout_inter1_1
  SIGNAL dout_inter1_0 : BIT;		-- dout_inter1_0
  SIGNAL dout_inter2_31 : BIT;		-- dout_inter2_31
  SIGNAL dout_inter2_30 : BIT;		-- dout_inter2_30
  SIGNAL dout_inter2_29 : BIT;		-- dout_inter2_29
  SIGNAL dout_inter2_28 : BIT;		-- dout_inter2_28
  SIGNAL dout_inter2_27 : BIT;		-- dout_inter2_27
  SIGNAL dout_inter2_26 : BIT;		-- dout_inter2_26
  SIGNAL dout_inter2_25 : BIT;		-- dout_inter2_25
  SIGNAL dout_inter2_24 : BIT;		-- dout_inter2_24
  SIGNAL dout_inter2_23 : BIT;		-- dout_inter2_23
  SIGNAL dout_inter2_22 : BIT;		-- dout_inter2_22
  SIGNAL dout_inter2_21 : BIT;		-- dout_inter2_21
  SIGNAL dout_inter2_20 : BIT;		-- dout_inter2_20
  SIGNAL dout_inter2_19 : BIT;		-- dout_inter2_19
  SIGNAL dout_inter2_18 : BIT;		-- dout_inter2_18
  SIGNAL dout_inter2_17 : BIT;		-- dout_inter2_17
  SIGNAL dout_inter2_16 : BIT;		-- dout_inter2_16
  SIGNAL dout_inter2_15 : BIT;		-- dout_inter2_15
  SIGNAL dout_inter2_14 : BIT;		-- dout_inter2_14
  SIGNAL dout_inter2_13 : BIT;		-- dout_inter2_13
  SIGNAL dout_inter2_12 : BIT;		-- dout_inter2_12
  SIGNAL dout_inter2_11 : BIT;		-- dout_inter2_11
  SIGNAL dout_inter2_10 : BIT;		-- dout_inter2_10
  SIGNAL dout_inter2_9 : BIT;		-- dout_inter2_9
  SIGNAL dout_inter2_8 : BIT;		-- dout_inter2_8
  SIGNAL dout_inter2_7 : BIT;		-- dout_inter2_7
  SIGNAL dout_inter2_6 : BIT;		-- dout_inter2_6
  SIGNAL dout_inter2_5 : BIT;		-- dout_inter2_5
  SIGNAL dout_inter2_4 : BIT;		-- dout_inter2_4
  SIGNAL dout_inter2_3 : BIT;		-- dout_inter2_3
  SIGNAL dout_inter2_2 : BIT;		-- dout_inter2_2
  SIGNAL dout_inter2_1 : BIT;		-- dout_inter2_1
  SIGNAL dout_inter2_0 : BIT;		-- dout_inter2_0
  SIGNAL dout_inter3_31 : BIT;		-- dout_inter3_31
  SIGNAL dout_inter3_30 : BIT;		-- dout_inter3_30
  SIGNAL dout_inter3_29 : BIT;		-- dout_inter3_29
  SIGNAL dout_inter3_28 : BIT;		-- dout_inter3_28
  SIGNAL dout_inter3_27 : BIT;		-- dout_inter3_27
  SIGNAL dout_inter3_26 : BIT;		-- dout_inter3_26
  SIGNAL dout_inter3_25 : BIT;		-- dout_inter3_25
  SIGNAL dout_inter3_24 : BIT;		-- dout_inter3_24
  SIGNAL dout_inter3_23 : BIT;		-- dout_inter3_23
  SIGNAL dout_inter3_22 : BIT;		-- dout_inter3_22
  SIGNAL dout_inter3_21 : BIT;		-- dout_inter3_21
  SIGNAL dout_inter3_20 : BIT;		-- dout_inter3_20
  SIGNAL dout_inter3_19 : BIT;		-- dout_inter3_19
  SIGNAL dout_inter3_18 : BIT;		-- dout_inter3_18
  SIGNAL dout_inter3_17 : BIT;		-- dout_inter3_17
  SIGNAL dout_inter3_16 : BIT;		-- dout_inter3_16
  SIGNAL dout_inter3_15 : BIT;		-- dout_inter3_15
  SIGNAL dout_inter3_14 : BIT;		-- dout_inter3_14
  SIGNAL dout_inter3_13 : BIT;		-- dout_inter3_13
  SIGNAL dout_inter3_12 : BIT;		-- dout_inter3_12
  SIGNAL dout_inter3_11 : BIT;		-- dout_inter3_11
  SIGNAL dout_inter3_10 : BIT;		-- dout_inter3_10
  SIGNAL dout_inter3_9 : BIT;		-- dout_inter3_9
  SIGNAL dout_inter3_8 : BIT;		-- dout_inter3_8
  SIGNAL dout_inter3_7 : BIT;		-- dout_inter3_7
  SIGNAL dout_inter3_6 : BIT;		-- dout_inter3_6
  SIGNAL dout_inter3_5 : BIT;		-- dout_inter3_5
  SIGNAL dout_inter3_4 : BIT;		-- dout_inter3_4
  SIGNAL dout_inter3_3 : BIT;		-- dout_inter3_3
  SIGNAL dout_inter3_2 : BIT;		-- dout_inter3_2
  SIGNAL dout_inter3_1 : BIT;		-- dout_inter3_1
  SIGNAL dout_inter3_0 : BIT;		-- dout_inter3_0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux15 : BIT;		-- aux15
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux22 : BIT;		-- aux22
  SIGNAL aux23 : BIT;		-- aux23
  SIGNAL aux26 : BIT;		-- aux26
  SIGNAL aux27 : BIT;		-- aux27
  SIGNAL aux30 : BIT;		-- aux30
  SIGNAL aux31 : BIT;		-- aux31
  SIGNAL aux34 : BIT;		-- aux34
  SIGNAL aux35 : BIT;		-- aux35
  SIGNAL aux38 : BIT;		-- aux38
  SIGNAL aux39 : BIT;		-- aux39
  SIGNAL aux42 : BIT;		-- aux42
  SIGNAL aux43 : BIT;		-- aux43
  SIGNAL aux46 : BIT;		-- aux46
  SIGNAL aux47 : BIT;		-- aux47
  SIGNAL aux50 : BIT;		-- aux50
  SIGNAL aux51 : BIT;		-- aux51
  SIGNAL aux54 : BIT;		-- aux54
  SIGNAL aux55 : BIT;		-- aux55
  SIGNAL aux58 : BIT;		-- aux58
  SIGNAL aux59 : BIT;		-- aux59
  SIGNAL aux62 : BIT;		-- aux62
  SIGNAL aux63 : BIT;		-- aux63
  SIGNAL aux66 : BIT;		-- aux66
  SIGNAL aux67 : BIT;		-- aux67
  SIGNAL aux70 : BIT;		-- aux70
  SIGNAL aux71 : BIT;		-- aux71
  SIGNAL aux72 : BIT;		-- aux72
  SIGNAL aux73 : BIT;		-- aux73
  SIGNAL aux74 : BIT;		-- aux74
  SIGNAL aux75 : BIT;		-- aux75
  SIGNAL aux76 : BIT;		-- aux76
  SIGNAL aux77 : BIT;		-- aux77
  SIGNAL aux78 : BIT;		-- aux78
  SIGNAL aux79 : BIT;		-- aux79
  SIGNAL aux80 : BIT;		-- aux80
  SIGNAL aux81 : BIT;		-- aux81
  SIGNAL aux82 : BIT;		-- aux82
  SIGNAL aux83 : BIT;		-- aux83
  SIGNAL aux84 : BIT;		-- aux84
  SIGNAL aux85 : BIT;		-- aux85
  SIGNAL aux86 : BIT;		-- aux86
  SIGNAL aux87 : BIT;		-- aux87
  SIGNAL aux88 : BIT;		-- aux88
  SIGNAL aux89 : BIT;		-- aux89
  SIGNAL aux90 : BIT;		-- aux90
  SIGNAL aux91 : BIT;		-- aux91
  SIGNAL aux92 : BIT;		-- aux92
  SIGNAL aux93 : BIT;		-- aux93
  SIGNAL aux94 : BIT;		-- aux94
  SIGNAL aux95 : BIT;		-- aux95
  SIGNAL aux96 : BIT;		-- aux96
  SIGNAL aux97 : BIT;		-- aux97
  SIGNAL aux98 : BIT;		-- aux98
  SIGNAL aux99 : BIT;		-- aux99
  SIGNAL aux100 : BIT;		-- aux100
  SIGNAL aux101 : BIT;		-- aux101
  SIGNAL aux102 : BIT;		-- aux102
  SIGNAL aux103 : BIT;		-- aux103
  SIGNAL aux104 : BIT;		-- aux104
  SIGNAL aux105 : BIT;		-- aux105
  SIGNAL aux106 : BIT;		-- aux106
  SIGNAL aux107 : BIT;		-- aux107
  SIGNAL aux108 : BIT;		-- aux108
  SIGNAL aux109 : BIT;		-- aux109
  SIGNAL aux110 : BIT;		-- aux110
  SIGNAL aux111 : BIT;		-- aux111
  SIGNAL aux112 : BIT;		-- aux112
  SIGNAL aux113 : BIT;		-- aux113
  SIGNAL aux114 : BIT;		-- aux114
  SIGNAL aux115 : BIT;		-- aux115
  SIGNAL aux116 : BIT;		-- aux116
  SIGNAL aux117 : BIT;		-- aux117
  SIGNAL aux118 : BIT;		-- aux118
  SIGNAL aux119 : BIT;		-- aux119
  SIGNAL aux120 : BIT;		-- aux120
  SIGNAL aux121 : BIT;		-- aux121
  SIGNAL aux122 : BIT;		-- aux122
  SIGNAL aux123 : BIT;		-- aux123
  SIGNAL aux124 : BIT;		-- aux124
  SIGNAL aux125 : BIT;		-- aux125
  SIGNAL aux126 : BIT;		-- aux126
  SIGNAL aux127 : BIT;		-- aux127
  SIGNAL aux128 : BIT;		-- aux128
  SIGNAL aux129 : BIT;		-- aux129
  SIGNAL aux130 : BIT;		-- aux130
  SIGNAL aux131 : BIT;		-- aux131
  SIGNAL aux132 : BIT;		-- aux132
  SIGNAL aux133 : BIT;		-- aux133
  SIGNAL aux134 : BIT;		-- aux134
  SIGNAL aux135 : BIT;		-- aux135
  SIGNAL aux136 : BIT;		-- aux136
  SIGNAL aux137 : BIT;		-- aux137
  SIGNAL aux138 : BIT;		-- aux138
  SIGNAL aux139 : BIT;		-- aux139
  SIGNAL aux140 : BIT;		-- aux140
  SIGNAL aux141 : BIT;		-- aux141
  SIGNAL aux142 : BIT;		-- aux142
  SIGNAL aux143 : BIT;		-- aux143
  SIGNAL aux144 : BIT;		-- aux144
  SIGNAL aux145 : BIT;		-- aux145
  SIGNAL aux146 : BIT;		-- aux146
  SIGNAL aux147 : BIT;		-- aux147
  SIGNAL aux148 : BIT;		-- aux148
  SIGNAL aux149 : BIT;		-- aux149
  SIGNAL aux150 : BIT;		-- aux150
  SIGNAL aux151 : BIT;		-- aux151
  SIGNAL aux152 : BIT;		-- aux152
  SIGNAL aux153 : BIT;		-- aux153
  SIGNAL aux154 : BIT;		-- aux154
  SIGNAL aux155 : BIT;		-- aux155
  SIGNAL aux156 : BIT;		-- aux156
  SIGNAL aux157 : BIT;		-- aux157
  SIGNAL aux158 : BIT;		-- aux158
  SIGNAL aux159 : BIT;		-- aux159
  SIGNAL aux160 : BIT;		-- aux160
  SIGNAL aux161 : BIT;		-- aux161
  SIGNAL aux162 : BIT;		-- aux162
  SIGNAL aux163 : BIT;		-- aux163
  SIGNAL aux164 : BIT;		-- aux164
  SIGNAL aux165 : BIT;		-- aux165
  SIGNAL aux166 : BIT;		-- aux166
  SIGNAL aux167 : BIT;		-- aux167
  SIGNAL aux168 : BIT;		-- aux168
  SIGNAL aux169 : BIT;		-- aux169
  SIGNAL aux170 : BIT;		-- aux170
  SIGNAL aux171 : BIT;		-- aux171
  SIGNAL aux172 : BIT;		-- aux172

BEGIN
  aux172 <= (NOT(shift_val(4)) AND NOT(shift_val(3)));
  aux171 <= (NOT(shift_val(4)) AND shift_val(3));
  aux170 <= (shift_val(0) AND shift_lsl);
  aux169 <= (NOT(shift_lsr) AND NOT(shift_lsl));
  aux168 <= (shift_val(0) OR din(31));
  aux167 <= (shift_val(0) OR din(30));
  aux166 <= (shift_val(0) OR din(27));
  aux165 <= (NOT(shift_val(0)) OR din(26));
  aux164 <= (din(25) OR shift_val(0));
  aux163 <= (shift_val(0) OR din(24));
  aux162 <= (shift_val(0) OR din(19));
  aux161 <= (shift_val(0) OR din(16));
  aux160 <= (din(14) AND shift_val(0));
  aux159 <= (shift_val(0) OR din(11));
  aux158 <= (din(9) AND shift_val(0));
  aux157 <= (din(8) AND shift_val(0));
  aux156 <= (din(7) AND shift_val(0));
  aux155 <= (shift_val(0) OR din(4));
  aux154 <= NOT(NOT(shift_val(0)) OR NOT(aux1));
  aux153 <= (din(0) OR NOT(shift_val(0)));
  aux152 <= (shift_val(0) OR din(1));
  aux151 <= (shift_val(1) OR dout_inter0_31);
  aux150 <= (shift_val(1) AND dout_inter0_31);
  aux149 <= (dout_inter0_28 AND shift_val(1));
  aux148 <= (dout_inter0_27 AND shift_val(1));
  aux147 <= (dout_inter0_26 AND shift_val(1));
  aux146 <= (dout_inter0_25 AND shift_val(1));
  aux145 <= (dout_inter0_24 AND shift_val(1));
  aux144 <= (dout_inter0_23 AND shift_val(1));
  aux143 <= (dout_inter0_22 AND shift_val(1));
  aux142 <= (dout_inter0_21 AND shift_val(1));
  aux141 <= (dout_inter0_20 AND shift_val(1));
  aux140 <= (dout_inter0_19 AND shift_val(1));
  aux139 <= (dout_inter0_18 AND shift_val(1));
  aux138 <= (dout_inter0_17 AND shift_val(1));
  aux137 <= (dout_inter0_16 AND shift_val(1));
  aux136 <= (dout_inter0_15 AND shift_val(1));
  aux135 <= (dout_inter0_14 AND shift_val(1));
  aux134 <= (dout_inter0_13 AND shift_val(1));
  aux133 <= (dout_inter0_12 AND shift_val(1));
  aux132 <= (dout_inter0_11 AND shift_val(1));
  aux131 <= (dout_inter0_10 AND shift_val(1));
  aux130 <= (dout_inter0_9 AND shift_val(1));
  aux129 <= (dout_inter0_8 AND shift_val(1));
  aux128 <= (dout_inter0_7 AND shift_val(1));
  aux127 <= (dout_inter0_6 AND shift_val(1));
  aux126 <= (dout_inter0_1 AND shift_val(1));
  aux125 <= (dout_inter0_5 AND shift_val(1));
  aux124 <= (dout_inter0_0 AND shift_val(1));
  aux123 <= (dout_inter0_4 AND shift_val(1));
  aux122 <= (NOT(shift_val(1)) OR NOT(shift_lsl));
  aux121 <= NOT(NOT(shift_val(1)) OR NOT(aux1));
  aux120 <= (aux119 AND shift_asr);
  aux119 <= (dout_inter1_31 AND shift_val(2));
  aux118 <= (dout_inter1_28 AND shift_val(2));
  aux117 <= (dout_inter1_27 AND shift_val(2));
  aux116 <= (dout_inter1_26 AND shift_val(2));
  aux115 <= (dout_inter1_25 AND shift_val(2));
  aux114 <= (dout_inter1_24 AND shift_val(2));
  aux113 <= (dout_inter1_23 AND shift_val(2));
  aux112 <= (dout_inter1_22 AND shift_val(2));
  aux111 <= (dout_inter1_21 AND shift_val(2));
  aux110 <= (dout_inter1_20 AND shift_val(2));
  aux109 <= (dout_inter1_19 AND shift_val(2));
  aux108 <= (dout_inter1_18 AND shift_val(2));
  aux107 <= (dout_inter1_17 AND shift_val(2));
  aux106 <= (dout_inter1_16 AND shift_val(2));
  aux105 <= (dout_inter1_15 AND shift_val(2));
  aux104 <= (dout_inter1_14 AND shift_val(2));
  aux103 <= (dout_inter1_13 AND shift_val(2));
  aux102 <= (dout_inter1_12 AND shift_val(2));
  aux101 <= (dout_inter1_3 AND shift_val(2));
  aux100 <= (dout_inter1_11 AND shift_val(2));
  aux99 <= (dout_inter1_2 AND shift_val(2));
  aux98 <= (dout_inter1_10 AND shift_val(2));
  aux97 <= (dout_inter1_1 AND shift_val(2));
  aux96 <= (dout_inter1_9 AND shift_val(2));
  aux95 <= (dout_inter1_0 AND shift_val(2));
  aux94 <= (dout_inter1_8 AND shift_val(2));
  aux93 <= (NOT(shift_val(2)) OR NOT(shift_lsl));
  aux92 <= NOT(NOT(shift_val(2)) OR NOT(aux1));
  aux91 <= (aux90 AND shift_asr);
  aux90 <= (dout_inter2_31 AND shift_val(3));
  aux89 <= (dout_inter2_7 AND shift_val(3));
  aux88 <= (dout_inter2_23 AND shift_val(3));
  aux87 <= (dout_inter2_6 AND shift_val(3));
  aux86 <= (dout_inter2_22 AND shift_val(3));
  aux85 <= (dout_inter2_5 AND shift_val(3));
  aux84 <= (dout_inter2_21 AND shift_val(3));
  aux83 <= (dout_inter2_4 AND shift_val(3));
  aux82 <= (dout_inter2_20 AND shift_val(3));
  aux81 <= (dout_inter2_3 AND shift_val(3));
  aux80 <= (dout_inter2_19 AND shift_val(3));
  aux79 <= (dout_inter2_2 AND shift_val(3));
  aux78 <= (dout_inter2_18 AND shift_val(3));
  aux77 <= (dout_inter2_1 AND shift_val(3));
  aux76 <= (dout_inter2_17 AND shift_val(3));
  aux75 <= (dout_inter2_0 AND shift_val(3));
  aux74 <= (dout_inter2_16 AND shift_val(3));
  aux73 <= (NOT(shift_val(3)) OR NOT(shift_lsl));
  aux72 <= NOT(NOT(shift_val(3)) OR NOT(aux1));
  aux71 <= (dout_inter3_15 AND shift_val(4));
  aux70 <= ((cin AND shift_rrx) OR (dout_inter3_31 AND NOT(
shift_rrx)));
  aux67 <= (dout_inter3_14 AND shift_val(4));
  aux66 <= ((dout_inter3_31 AND shift_rrx) OR (
dout_inter3_30 AND NOT(shift_rrx)));
  aux63 <= (dout_inter3_13 AND shift_val(4));
  aux62 <= ((dout_inter3_30 AND shift_rrx) OR (
dout_inter3_29 AND NOT(shift_rrx)));
  aux59 <= (dout_inter3_12 AND shift_val(4));
  aux58 <= ((dout_inter3_29 AND shift_rrx) OR (
dout_inter3_28 AND NOT(shift_rrx)));
  aux55 <= (dout_inter3_11 AND shift_val(4));
  aux54 <= ((dout_inter3_28 AND shift_rrx) OR (
dout_inter3_27 AND NOT(shift_rrx)));
  aux51 <= (dout_inter3_10 AND shift_val(4));
  aux50 <= ((dout_inter3_27 AND shift_rrx) OR (
dout_inter3_26 AND NOT(shift_rrx)));
  aux47 <= (dout_inter3_9 AND shift_val(4));
  aux46 <= ((dout_inter3_26 AND shift_rrx) OR (
dout_inter3_25 AND NOT(shift_rrx)));
  aux43 <= (dout_inter3_8 AND shift_val(4));
  aux42 <= ((dout_inter3_25 AND shift_rrx) OR (
dout_inter3_24 AND NOT(shift_rrx)));
  aux39 <= (dout_inter3_7 AND shift_val(4));
  aux38 <= ((dout_inter3_24 AND shift_rrx) OR (
dout_inter3_23 AND NOT(shift_rrx)));
  aux35 <= (dout_inter3_6 AND shift_val(4));
  aux34 <= ((dout_inter3_23 AND shift_rrx) OR (
dout_inter3_22 AND NOT(shift_rrx)));
  aux31 <= (dout_inter3_5 AND shift_val(4));
  aux30 <= ((dout_inter3_22 AND shift_rrx) OR (
dout_inter3_21 AND NOT(shift_rrx)));
  aux27 <= (dout_inter3_4 AND shift_val(4));
  aux26 <= ((dout_inter3_21 AND shift_rrx) OR (
dout_inter3_20 AND NOT(shift_rrx)));
  aux23 <= (dout_inter3_3 AND shift_val(4));
  aux22 <= ((dout_inter3_20 AND shift_rrx) OR (
dout_inter3_19 AND NOT(shift_rrx)));
  aux19 <= (dout_inter3_2 AND shift_val(4));
  aux18 <= ((dout_inter3_19 AND shift_rrx) OR (
dout_inter3_18 AND NOT(shift_rrx)));
  aux15 <= (dout_inter3_1 AND shift_val(4));
  aux14 <= ((dout_inter3_18 AND shift_rrx) OR (
dout_inter3_17 AND NOT(shift_rrx)));
  aux11 <= (aux10 AND NOT(shift_lsr));
  aux10 <= (NOT(shift_asr) AND shift_ror);
  aux9 <= (dout_inter3_0 AND shift_val(4));
  aux8 <= ((dout_inter3_17 AND shift_rrx) OR (
dout_inter3_16 AND NOT(shift_rrx)));
  aux5 <= ((dout_inter3_31 AND shift_val(4)) AND shift_asr);
  aux3 <= (NOT(shift_val(4)) OR NOT(shift_lsl));
  aux2 <= NOT(NOT(shift_val(4)) OR NOT(aux1));
  aux1 <= NOT((NOT(shift_asr) AND NOT(shift_ror)) AND NOT(
shift_lsr));
  dout_inter3_0 <= (aux73 AND ((dout_inter2_8 AND aux72) OR (
dout_inter2_0 AND NOT(aux72))));
  dout_inter3_1 <= (aux73 AND ((dout_inter2_9 AND aux72) OR (
dout_inter2_1 AND NOT(aux72))));
  dout_inter3_2 <= (aux73 AND ((dout_inter2_10 AND aux72) OR (
dout_inter2_2 AND NOT(aux72))));
  dout_inter3_3 <= (aux73 AND ((dout_inter2_11 AND aux72) OR (
dout_inter2_3 AND NOT(aux72))));
  dout_inter3_4 <= (aux73 AND ((dout_inter2_12 AND aux72) OR (
dout_inter2_4 AND NOT(aux72))));
  dout_inter3_5 <= (aux73 AND ((dout_inter2_13 AND aux72) OR (
dout_inter2_5 AND NOT(aux72))));
  dout_inter3_6 <= (aux73 AND ((dout_inter2_14 AND aux72) OR (
dout_inter2_6 AND NOT(aux72))));
  dout_inter3_7 <= (aux73 AND ((dout_inter2_15 AND aux72) OR (
dout_inter2_7 AND NOT(aux72))));
  dout_inter3_8 <= ((dout_inter2_8 AND NOT(shift_val(3))) OR (aux75 
AND shift_lsl) OR (((aux74 AND aux1) OR (
dout_inter2_8 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_9 <= ((dout_inter2_9 AND NOT(shift_val(3))) OR (aux77 
AND shift_lsl) OR (((aux76 AND aux1) OR (
dout_inter2_9 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_10 <= ((dout_inter2_10 AND NOT(shift_val(3))) OR (aux79
 AND shift_lsl) OR (((aux78 AND aux1) OR (
dout_inter2_10 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_11 <= ((dout_inter2_11 AND NOT(shift_val(3))) OR (aux81
 AND shift_lsl) OR (((aux80 AND aux1) OR (
dout_inter2_11 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_12 <= ((dout_inter2_12 AND NOT(shift_val(3))) OR (aux83
 AND shift_lsl) OR (((aux82 AND aux1) OR (
dout_inter2_12 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_13 <= ((dout_inter2_13 AND NOT(shift_val(3))) OR (aux85
 AND shift_lsl) OR (((aux84 AND aux1) OR (
dout_inter2_13 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_14 <= ((dout_inter2_14 AND NOT(shift_val(3))) OR (aux87
 AND shift_lsl) OR (((aux86 AND aux1) OR (
dout_inter2_14 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_15 <= ((dout_inter2_15 AND NOT(shift_val(3))) OR (aux89
 AND shift_lsl) OR (((aux88 AND aux1) OR (
dout_inter2_15 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_16 <= ((dout_inter2_16 AND NOT(shift_val(3))) OR (
dout_inter2_8 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_24 AND shift_val(3) AND aux1) OR (dout_inter2_16 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_17 <= ((dout_inter2_17 AND NOT(shift_val(3))) OR (
dout_inter2_9 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_25 AND shift_val(3) AND aux1) OR (dout_inter2_17 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_18 <= ((dout_inter2_18 AND NOT(shift_val(3))) OR (
dout_inter2_10 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_26 AND shift_val(3) AND aux1) OR (dout_inter2_18 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_19 <= ((dout_inter2_19 AND NOT(shift_val(3))) OR (
dout_inter2_11 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_27 AND shift_val(3) AND aux1) OR (dout_inter2_19 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_20 <= ((dout_inter2_20 AND NOT(shift_val(3))) OR (
dout_inter2_12 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_28 AND shift_val(3) AND aux1) OR (dout_inter2_20 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_21 <= ((dout_inter2_21 AND NOT(shift_val(3))) OR (
dout_inter2_13 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_29 AND shift_val(3) AND aux1) OR (dout_inter2_21 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_22 <= ((dout_inter2_22 AND NOT(shift_val(3))) OR (
dout_inter2_14 AND shift_val(3) AND shift_lsl) OR (((
dout_inter2_30 AND shift_val(3) AND aux1) OR (dout_inter2_22 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter3_23 <= ((dout_inter2_23 AND NOT(shift_val(3))) OR (
dout_inter2_15 AND shift_val(3) AND shift_lsl) OR (((aux90 AND 
aux1) OR (dout_inter2_23 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter3_24 <= ((dout_inter2_24 AND NOT(shift_val(3))) OR (aux74
 AND shift_lsl) OR ((aux91 OR (aux75 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_24 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_25 <= ((dout_inter2_25 AND NOT(shift_val(3))) OR (aux76
 AND shift_lsl) OR ((aux91 OR (aux77 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_25 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_26 <= ((dout_inter2_26 AND NOT(shift_val(3))) OR (aux78
 AND shift_lsl) OR ((aux91 OR (aux79 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_26 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_27 <= ((dout_inter2_27 AND NOT(shift_val(3))) OR (aux80
 AND shift_lsl) OR ((aux91 OR (aux81 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_27 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_28 <= ((dout_inter2_28 AND NOT(shift_val(3))) OR (aux82
 AND shift_lsl) OR ((aux91 OR (aux83 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_28 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_29 <= ((dout_inter2_29 AND NOT(shift_val(3))) OR (aux84
 AND shift_lsl) OR ((aux91 OR (aux85 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_29 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_30 <= ((dout_inter2_30 AND NOT(shift_val(3))) OR (aux86
 AND shift_lsl) OR ((aux91 OR (aux87 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter2_30 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter3_31 <= ((dout_inter2_31 AND NOT(shift_val(3))) OR (aux88
 AND shift_lsl) OR (((aux89 AND aux10) OR (
dout_inter2_31 AND NOT(aux10))) AND aux169));
  dout_inter2_0 <= (aux93 AND ((dout_inter1_4 AND aux92) OR (
dout_inter1_0 AND NOT(aux92))));
  dout_inter2_1 <= (aux93 AND ((dout_inter1_5 AND aux92) OR (
dout_inter1_1 AND NOT(aux92))));
  dout_inter2_2 <= (aux93 AND ((dout_inter1_6 AND aux92) OR (
dout_inter1_2 AND NOT(aux92))));
  dout_inter2_3 <= (aux93 AND ((dout_inter1_7 AND aux92) OR (
dout_inter1_3 AND NOT(aux92))));
  dout_inter2_4 <= ((dout_inter1_4 AND NOT(shift_val(2))) OR (aux95 
AND shift_lsl) OR (((aux94 AND aux1) OR (
dout_inter1_4 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_5 <= ((dout_inter1_5 AND NOT(shift_val(2))) OR (aux97 
AND shift_lsl) OR (((aux96 AND aux1) OR (
dout_inter1_5 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_6 <= ((dout_inter1_6 AND NOT(shift_val(2))) OR (aux99 
AND shift_lsl) OR (((aux98 AND aux1) OR (
dout_inter1_6 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_7 <= ((dout_inter1_7 AND NOT(shift_val(2))) OR (aux101
 AND shift_lsl) OR (((aux100 AND aux1) OR (
dout_inter1_7 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_8 <= ((dout_inter1_8 AND NOT(shift_val(2))) OR (
dout_inter1_4 AND shift_val(2) AND shift_lsl) OR (((aux102 AND
 aux1) OR (dout_inter1_8 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter2_9 <= ((dout_inter1_9 AND NOT(shift_val(2))) OR (
dout_inter1_5 AND shift_val(2) AND shift_lsl) OR (((aux103 AND
 aux1) OR (dout_inter1_9 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter2_10 <= ((dout_inter1_10 AND NOT(shift_val(2))) OR (
dout_inter1_6 AND shift_val(2) AND shift_lsl) OR (((aux104 AND
 aux1) OR (dout_inter1_10 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter2_11 <= ((dout_inter1_11 AND NOT(shift_val(2))) OR (
dout_inter1_7 AND shift_val(2) AND shift_lsl) OR (((aux105 AND
 aux1) OR (dout_inter1_11 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter2_12 <= ((dout_inter1_12 AND NOT(shift_val(2))) OR (aux94
 AND shift_lsl) OR (((aux106 AND aux1) OR (
dout_inter1_12 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_13 <= ((dout_inter1_13 AND NOT(shift_val(2))) OR (aux96
 AND shift_lsl) OR (((aux107 AND aux1) OR (
dout_inter1_13 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_14 <= ((dout_inter1_14 AND NOT(shift_val(2))) OR (aux98
 AND shift_lsl) OR (((aux108 AND aux1) OR (
dout_inter1_14 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_15 <= ((dout_inter1_15 AND NOT(shift_val(2))) OR (
aux100 AND shift_lsl) OR (((aux109 AND aux1) OR (
dout_inter1_15 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_16 <= ((dout_inter1_16 AND NOT(shift_val(2))) OR (
aux102 AND shift_lsl) OR (((aux110 AND aux1) OR (
dout_inter1_16 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_17 <= ((dout_inter1_17 AND NOT(shift_val(2))) OR (
aux103 AND shift_lsl) OR (((aux111 AND aux1) OR (
dout_inter1_17 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_18 <= ((dout_inter1_18 AND NOT(shift_val(2))) OR (
aux104 AND shift_lsl) OR (((aux112 AND aux1) OR (
dout_inter1_18 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_19 <= ((dout_inter1_19 AND NOT(shift_val(2))) OR (
aux105 AND shift_lsl) OR (((aux113 AND aux1) OR (
dout_inter1_19 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_20 <= ((dout_inter1_20 AND NOT(shift_val(2))) OR (
aux106 AND shift_lsl) OR (((aux114 AND aux1) OR (
dout_inter1_20 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_21 <= ((dout_inter1_21 AND NOT(shift_val(2))) OR (
aux107 AND shift_lsl) OR (((aux115 AND aux1) OR (
dout_inter1_21 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_22 <= ((dout_inter1_22 AND NOT(shift_val(2))) OR (
aux108 AND shift_lsl) OR (((aux116 AND aux1) OR (
dout_inter1_22 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_23 <= ((dout_inter1_23 AND NOT(shift_val(2))) OR (
aux109 AND shift_lsl) OR (((aux117 AND aux1) OR (
dout_inter1_23 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_24 <= ((dout_inter1_24 AND NOT(shift_val(2))) OR (
aux110 AND shift_lsl) OR (((aux118 AND aux1) OR (
dout_inter1_24 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_25 <= ((dout_inter1_25 AND NOT(shift_val(2))) OR (
aux111 AND shift_lsl) OR (((dout_inter1_29 AND 
shift_val(2) AND aux1) OR (dout_inter1_25 AND NOT(aux1))) AND
 NOT(shift_lsl)));
  dout_inter2_26 <= ((dout_inter1_26 AND NOT(shift_val(2))) OR (
aux112 AND shift_lsl) OR (((dout_inter1_30 AND 
shift_val(2) AND aux1) OR (dout_inter1_26 AND NOT(aux1))) AND
 NOT(shift_lsl)));
  dout_inter2_27 <= ((dout_inter1_27 AND NOT(shift_val(2))) OR (
aux113 AND shift_lsl) OR (((aux119 AND aux1) OR (
dout_inter1_27 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter2_28 <= ((dout_inter1_28 AND NOT(shift_val(2))) OR (
aux114 AND shift_lsl) OR ((aux120 OR (aux95 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter1_28 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter2_29 <= ((dout_inter1_29 AND NOT(shift_val(2))) OR (
aux115 AND shift_lsl) OR ((aux120 OR (aux97 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter1_29 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter2_30 <= ((dout_inter1_30 AND NOT(shift_val(2))) OR (
aux116 AND shift_lsl) OR ((aux120 OR (aux99 AND NOT(
shift_asr) AND shift_ror) OR (dout_inter1_30 AND NOT(
shift_asr) AND NOT(shift_ror))) AND aux169));
  dout_inter2_31 <= ((dout_inter1_31 AND NOT(shift_val(2))) OR (
aux117 AND shift_lsl) OR (((aux101 AND aux10) OR (
dout_inter1_31 AND NOT(aux10))) AND aux169));
  dout_inter1_0 <= (aux122 AND ((dout_inter0_2 AND aux121) OR (
dout_inter0_0 AND NOT(aux121))));
  dout_inter1_1 <= (aux122 AND ((dout_inter0_3 AND aux121) OR (
dout_inter0_1 AND NOT(aux121))));
  dout_inter1_2 <= ((dout_inter0_2 AND NOT(shift_val(1))) OR (aux124
 AND shift_lsl) OR (((aux123 AND aux1) OR (
dout_inter0_2 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_3 <= ((dout_inter0_3 AND NOT(shift_val(1))) OR (aux126
 AND shift_lsl) OR (((aux125 AND aux1) OR (
dout_inter0_3 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_4 <= ((dout_inter0_4 AND NOT(shift_val(1))) OR (
dout_inter0_2 AND shift_val(1) AND shift_lsl) OR (((aux127 AND
 aux1) OR (dout_inter0_4 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter1_5 <= ((dout_inter0_5 AND NOT(shift_val(1))) OR (
dout_inter0_3 AND shift_val(1) AND shift_lsl) OR (((aux128 AND
 aux1) OR (dout_inter0_5 AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter1_6 <= ((dout_inter0_6 AND NOT(shift_val(1))) OR (aux123
 AND shift_lsl) OR (((aux129 AND aux1) OR (
dout_inter0_6 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_7 <= ((dout_inter0_7 AND NOT(shift_val(1))) OR (aux125
 AND shift_lsl) OR (((aux130 AND aux1) OR (
dout_inter0_7 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_8 <= ((dout_inter0_8 AND NOT(shift_val(1))) OR (aux127
 AND shift_lsl) OR (((aux131 AND aux1) OR (
dout_inter0_8 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_9 <= ((dout_inter0_9 AND NOT(shift_val(1))) OR (aux128
 AND shift_lsl) OR (((aux132 AND aux1) OR (
dout_inter0_9 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_10 <= ((dout_inter0_10 AND NOT(shift_val(1))) OR (
aux129 AND shift_lsl) OR (((aux133 AND aux1) OR (
dout_inter0_10 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_11 <= ((dout_inter0_11 AND NOT(shift_val(1))) OR (
aux130 AND shift_lsl) OR (((aux134 AND aux1) OR (
dout_inter0_11 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_12 <= ((dout_inter0_12 AND NOT(shift_val(1))) OR (
aux131 AND shift_lsl) OR (((aux135 AND aux1) OR (
dout_inter0_12 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_13 <= ((dout_inter0_13 AND NOT(shift_val(1))) OR (
aux132 AND shift_lsl) OR (((aux136 AND aux1) OR (
dout_inter0_13 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_14 <= ((dout_inter0_14 AND NOT(shift_val(1))) OR (
aux133 AND shift_lsl) OR (((aux137 AND aux1) OR (
dout_inter0_14 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_15 <= ((dout_inter0_15 AND NOT(shift_val(1))) OR (
aux134 AND shift_lsl) OR (((aux138 AND aux1) OR (
dout_inter0_15 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_16 <= ((dout_inter0_16 AND NOT(shift_val(1))) OR (
aux135 AND shift_lsl) OR (((aux139 AND aux1) OR (
dout_inter0_16 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_17 <= ((dout_inter0_17 AND NOT(shift_val(1))) OR (
aux136 AND shift_lsl) OR (((aux140 AND aux1) OR (
dout_inter0_17 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_18 <= ((dout_inter0_18 AND NOT(shift_val(1))) OR (
aux137 AND shift_lsl) OR (((aux141 AND aux1) OR (
dout_inter0_18 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_19 <= ((dout_inter0_19 AND NOT(shift_val(1))) OR (
aux138 AND shift_lsl) OR (((aux142 AND aux1) OR (
dout_inter0_19 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_20 <= ((dout_inter0_20 AND NOT(shift_val(1))) OR (
aux139 AND shift_lsl) OR (((aux143 AND aux1) OR (
dout_inter0_20 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_21 <= ((dout_inter0_21 AND NOT(shift_val(1))) OR (
aux140 AND shift_lsl) OR (((aux144 AND aux1) OR (
dout_inter0_21 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_22 <= ((dout_inter0_22 AND NOT(shift_val(1))) OR (
aux141 AND shift_lsl) OR (((aux145 AND aux1) OR (
dout_inter0_22 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_23 <= ((dout_inter0_23 AND NOT(shift_val(1))) OR (
aux142 AND shift_lsl) OR (((aux146 AND aux1) OR (
dout_inter0_23 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_24 <= ((dout_inter0_24 AND NOT(shift_val(1))) OR (
aux143 AND shift_lsl) OR (((aux147 AND aux1) OR (
dout_inter0_24 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_25 <= ((dout_inter0_25 AND NOT(shift_val(1))) OR (
aux144 AND shift_lsl) OR (((aux148 AND aux1) OR (
dout_inter0_25 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_26 <= ((dout_inter0_26 AND NOT(shift_val(1))) OR (
aux145 AND shift_lsl) OR (((aux149 AND aux1) OR (
dout_inter0_26 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_27 <= ((dout_inter0_27 AND NOT(shift_val(1))) OR (
aux146 AND shift_lsl) OR (((dout_inter0_29 AND 
shift_val(1) AND aux1) OR (dout_inter0_27 AND NOT(aux1))) AND
 NOT(shift_lsl)));
  dout_inter1_28 <= ((dout_inter0_28 AND NOT(shift_val(1))) OR (
aux147 AND shift_lsl) OR (((dout_inter0_30 AND 
shift_val(1) AND aux1) OR (dout_inter0_28 AND NOT(aux1))) AND
 NOT(shift_lsl)));
  dout_inter1_29 <= ((dout_inter0_29 AND NOT(shift_val(1))) OR (
aux148 AND shift_lsl) OR (((aux150 AND aux1) OR (
dout_inter0_29 AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter1_30 <= ((dout_inter0_30 AND NOT(shift_val(1))) OR (
aux149 AND shift_lsl) OR (((aux150 AND shift_asr) OR (
aux124 AND NOT(shift_asr) AND shift_ror) OR (
dout_inter0_30 AND NOT(shift_asr) AND NOT(shift_ror))) AND 
aux169));
  dout_inter1_31 <= ((NOT(shift_val(1)) AND dout_inter0_31) OR (
dout_inter0_29 AND aux151 AND shift_lsl) OR (((dout_inter0_1 
AND aux151 AND aux10) OR (dout_inter0_31 AND NOT(
aux10))) AND aux169));
  dout_inter0_0 <= ((((shift_val(0) AND din(1) AND aux1) OR (din(0) 
AND NOT(aux1))) AND NOT(shift_lsl)) OR (din(0) AND 
NOT(shift_val(0))));
  dout_inter0_1 <= ((aux152 AND aux153 AND shift_lsl) OR (((aux152 
AND (din(2) OR NOT(shift_val(0))) AND aux1) OR (
din(1) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_2 <= (((NOT(shift_val(0)) OR din(1)) AND (din(2) OR 
shift_val(0)) AND shift_lsl) OR (((din(3) AND aux154) OR (
din(2) AND NOT(aux154))) AND NOT(shift_lsl)));
  dout_inter0_3 <= ((din(3) AND NOT(shift_val(0))) OR (din(2) AND 
aux170) OR (((shift_val(0) AND din(4) AND aux1) OR (
din(3) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_4 <= ((aux155 AND (din(3) OR NOT(shift_val(0))) AND 
shift_lsl) OR (((aux155 AND (din(5) OR NOT(shift_val(0))) 
AND aux1) OR (din(4) AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter0_5 <= (((NOT(shift_val(0)) OR din(4)) AND (din(5) OR 
shift_val(0)) AND shift_lsl) OR (((din(6) AND aux154) OR (
din(5) AND NOT(aux154))) AND NOT(shift_lsl)));
  dout_inter0_6 <= ((din(6) AND NOT(shift_val(0))) OR (din(5) AND 
aux170) OR (((aux156 AND aux1) OR (din(6) AND NOT(aux1)
)) AND NOT(shift_lsl)));
  dout_inter0_7 <= ((din(7) AND NOT(shift_val(0))) OR (din(6) AND 
aux170) OR (((aux157 AND aux1) OR (din(7) AND NOT(aux1)
)) AND NOT(shift_lsl)));
  dout_inter0_8 <= ((din(8) AND NOT(shift_val(0))) OR (aux156 AND 
shift_lsl) OR (((aux158 AND aux1) OR (din(8) AND NOT(aux1)
)) AND NOT(shift_lsl)));
  dout_inter0_9 <= ((din(9) AND NOT(shift_val(0))) OR (aux157 AND 
shift_lsl) OR (((din(10) AND shift_val(0) AND aux1) OR (
din(9) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_10 <= ((din(10) AND NOT(shift_val(0))) OR (aux158 AND 
shift_lsl) OR (((shift_val(0) AND din(11) AND aux1) OR (
din(10) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_11 <= ((aux159 AND (din(10) OR NOT(shift_val(0))) AND 
shift_lsl) OR (((aux159 AND (din(12) OR NOT(shift_val(0)))
 AND aux1) OR (din(11) AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter0_12 <= (((NOT(shift_val(0)) OR din(11)) AND (din(12) OR 
shift_val(0)) AND shift_lsl) OR (((din(13) AND aux154) OR (
din(12) AND NOT(aux154))) AND NOT(shift_lsl)));
  dout_inter0_13 <= ((din(13) AND NOT(shift_val(0))) OR (din(12) AND 
aux170) OR (((aux160 AND aux1) OR (din(13) AND NOT(aux1
))) AND NOT(shift_lsl)));
  dout_inter0_14 <= ((din(14) AND NOT(shift_val(0))) OR (din(13) AND 
aux170) OR (((din(15) AND shift_val(0) AND aux1) OR (
din(14) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_15 <= ((din(15) AND NOT(shift_val(0))) OR (aux160 AND 
shift_lsl) OR (((shift_val(0) AND din(16) AND aux1) OR (
din(15) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_16 <= ((aux161 AND (din(15) OR NOT(shift_val(0))) AND 
shift_lsl) OR (((aux161 AND (din(17) OR NOT(shift_val(0)))
 AND aux1) OR (din(16) AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter0_17 <= (((NOT(shift_val(0)) OR din(16)) AND (din(17) OR 
shift_val(0)) AND shift_lsl) OR (((din(18) AND aux154) OR (
din(17) AND NOT(aux154))) AND NOT(shift_lsl)));
  dout_inter0_18 <= ((din(18) AND NOT(shift_val(0))) OR (din(17) AND 
aux170) OR (((shift_val(0) AND din(19) AND aux1) OR (
din(18) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_19 <= ((aux162 AND (din(18) OR NOT(shift_val(0))) AND 
shift_lsl) OR (((aux162 AND (din(20) OR NOT(shift_val(0)))
 AND aux1) OR (din(19) AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter0_20 <= (((NOT(shift_val(0)) OR din(19)) AND (din(20) OR 
shift_val(0)) AND shift_lsl) OR (((din(21) AND aux154) OR (
din(20) AND NOT(aux154))) AND NOT(shift_lsl)));
  dout_inter0_21 <= ((din(21) AND NOT(shift_val(0))) OR (din(20) AND 
aux170) OR (((shift_val(0) AND din(22) AND aux1) OR (
din(21) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_22 <= ((NOT(shift_val(0)) AND din(22)) OR (din(21) AND 
(shift_val(0) OR din(22)) AND shift_lsl) OR (((
shift_val(0) AND din(23) AND aux1) OR (din(22) AND NOT(aux1))
) AND NOT(shift_lsl)));
  dout_inter0_23 <= ((NOT(shift_val(0)) AND din(23)) OR ((
shift_val(0) OR din(23)) AND din(22) AND shift_lsl) OR (((
shift_val(0) AND din(24) AND aux1) OR (din(23) AND NOT(aux1))
) AND NOT(shift_lsl)));
  dout_inter0_24 <= ((aux163 AND (NOT(shift_val(0)) OR din(23)) AND 
shift_lsl) OR (((aux163 AND (din(25) OR NOT(shift_val(0)))
 AND aux1) OR (din(24) AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter0_25 <= (((NOT(shift_val(0)) OR din(24)) AND aux164 AND 
shift_lsl) OR (((aux165 AND aux164 AND aux1) OR (din(25) 
AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_26 <= ((NOT(shift_val(0)) AND din(26)) OR (din(25) AND 
(shift_val(0) OR din(26)) AND shift_lsl) OR (((
shift_val(0) AND din(27) AND aux1) OR (din(26) AND NOT(aux1))
) AND NOT(shift_lsl)));
  dout_inter0_27 <= ((aux166 AND aux165 AND shift_lsl) OR (((aux166 
AND (din(28) OR NOT(shift_val(0))) AND aux1) OR (
din(27) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_28 <= (((NOT(shift_val(0)) OR din(27)) AND (din(28) OR 
shift_val(0)) AND shift_lsl) OR (((din(29) AND aux154) OR (
din(28) AND NOT(aux154))) AND NOT(shift_lsl)));
  dout_inter0_29 <= ((din(29) AND NOT(shift_val(0))) OR (din(28) AND 
aux170) OR (((shift_val(0) AND din(30) AND aux1) OR (
din(29) AND NOT(aux1))) AND NOT(shift_lsl)));
  dout_inter0_30 <= ((aux167 AND (din(29) OR NOT(shift_val(0))) AND 
shift_lsl) OR (((aux167 AND (NOT(shift_val(0)) OR din(31))
 AND aux1) OR (din(30) AND NOT(aux1))) AND NOT(
shift_lsl)));
  dout_inter0_31 <= (((NOT(shift_val(0)) OR din(30)) AND aux168 AND 
shift_lsl) OR ((NOT(shift_val(0)) OR NOT(shift_lsr)) AND (
(aux168 AND aux153 AND aux10) OR (din(31) AND NOT(
aux10))) AND NOT(shift_lsl)));

cout <= ((((dout_inter3_16 AND shift_val(4)) OR (
dout_inter2_24 AND aux171) OR ((shift_val(1) OR shift_val(2) OR
 (shift_val(0) AND din(31))) AND (aux118 OR ((
dout_inter0_30 OR NOT(shift_val(1))) AND NOT(shift_val(2)))) 
AND aux172)) AND shift_lsl) OR ((((aux71 OR (
dout_inter2_7 AND aux171) OR (((din(0) AND NOT(shift_val(1)) 
AND NOT(shift_val(2)) AND shift_val(0)) OR aux101 OR
 (aux126 AND NOT(shift_val(2)))) AND aux172)) AND 
aux1) OR (((din(0) AND shift_rrx) OR (cin AND NOT(
shift_rrx))) AND NOT(aux1))) AND NOT(shift_lsl)));

dout (0) <= (aux3 AND ((dout_inter3_16 AND aux2) OR (((
dout_inter3_1 AND shift_rrx) OR (dout_inter3_0 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (1) <= (aux3 AND ((dout_inter3_17 AND aux2) OR (((
dout_inter3_2 AND shift_rrx) OR (dout_inter3_1 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (2) <= (aux3 AND ((dout_inter3_18 AND aux2) OR (((
dout_inter3_3 AND shift_rrx) OR (dout_inter3_2 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (3) <= (aux3 AND ((dout_inter3_19 AND aux2) OR (((
dout_inter3_4 AND shift_rrx) OR (dout_inter3_3 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (4) <= (aux3 AND ((dout_inter3_20 AND aux2) OR (((
dout_inter3_5 AND shift_rrx) OR (dout_inter3_4 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (5) <= (aux3 AND ((dout_inter3_21 AND aux2) OR (((
dout_inter3_6 AND shift_rrx) OR (dout_inter3_5 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (6) <= (aux3 AND ((dout_inter3_22 AND aux2) OR (((
dout_inter3_7 AND shift_rrx) OR (dout_inter3_6 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (7) <= (aux3 AND ((dout_inter3_23 AND aux2) OR (((
dout_inter3_8 AND shift_rrx) OR (dout_inter3_7 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (8) <= (aux3 AND ((dout_inter3_24 AND aux2) OR (((
dout_inter3_9 AND shift_rrx) OR (dout_inter3_8 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (9) <= (aux3 AND ((dout_inter3_25 AND aux2) OR (((
dout_inter3_10 AND shift_rrx) OR (dout_inter3_9 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (10) <= (aux3 AND ((dout_inter3_26 AND aux2) OR (((
dout_inter3_11 AND shift_rrx) OR (dout_inter3_10 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (11) <= (aux3 AND ((dout_inter3_27 AND aux2) OR (((
dout_inter3_12 AND shift_rrx) OR (dout_inter3_11 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (12) <= (aux3 AND ((dout_inter3_28 AND aux2) OR (((
dout_inter3_13 AND shift_rrx) OR (dout_inter3_12 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (13) <= (aux3 AND ((dout_inter3_29 AND aux2) OR (((
dout_inter3_14 AND shift_rrx) OR (dout_inter3_13 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (14) <= (aux3 AND ((dout_inter3_30 AND aux2) OR (((
dout_inter3_15 AND shift_rrx) OR (dout_inter3_14 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (15) <= (aux3 AND ((dout_inter3_31 AND aux2) OR (((
dout_inter3_16 AND shift_rrx) OR (dout_inter3_15 AND NOT(
shift_rrx))) AND NOT(aux2))));

dout (16) <= ((aux9 AND aux11) OR (aux8 AND NOT(shift_val(4)))
 OR (aux9 AND shift_lsl) OR (((aux8 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (17) <= ((aux15 AND aux11) OR (aux14 AND NOT(shift_val(4)
)) OR (aux15 AND shift_lsl) OR (((aux14 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (18) <= ((aux19 AND aux11) OR (aux18 AND NOT(shift_val(4)
)) OR (aux19 AND shift_lsl) OR (((aux18 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (19) <= ((aux23 AND aux11) OR (aux22 AND NOT(shift_val(4)
)) OR (aux23 AND shift_lsl) OR (((aux22 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (20) <= ((aux27 AND aux11) OR (aux26 AND NOT(shift_val(4)
)) OR (aux27 AND shift_lsl) OR (((aux26 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (21) <= ((aux31 AND aux11) OR (aux30 AND NOT(shift_val(4)
)) OR (aux31 AND shift_lsl) OR (((aux30 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (22) <= ((aux35 AND aux11) OR (aux34 AND NOT(shift_val(4)
)) OR (aux35 AND shift_lsl) OR (((aux34 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (23) <= ((aux39 AND aux11) OR (aux38 AND NOT(shift_val(4)
)) OR (aux39 AND shift_lsl) OR (((aux38 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (24) <= ((aux43 AND aux11) OR (aux42 AND NOT(shift_val(4)
)) OR (aux43 AND shift_lsl) OR (((aux42 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (25) <= ((aux47 AND aux11) OR (aux46 AND NOT(shift_val(4)
)) OR (aux47 AND shift_lsl) OR (((aux46 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (26) <= ((aux51 AND aux11) OR (aux50 AND NOT(shift_val(4)
)) OR (aux51 AND shift_lsl) OR (((aux50 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (27) <= ((aux55 AND aux11) OR (aux54 AND NOT(shift_val(4)
)) OR (aux55 AND shift_lsl) OR (((aux54 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (28) <= ((aux59 AND aux11) OR (aux58 AND NOT(shift_val(4)
)) OR (aux59 AND shift_lsl) OR (((aux58 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (29) <= ((aux63 AND aux11) OR (aux62 AND NOT(shift_val(4)
)) OR (aux63 AND shift_lsl) OR (((aux62 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (30) <= ((aux67 AND aux11) OR (aux66 AND NOT(shift_val(4)
)) OR (aux67 AND shift_lsl) OR (((aux66 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));

dout (31) <= ((aux71 AND aux11) OR (aux70 AND NOT(shift_val(4)
)) OR (aux71 AND shift_lsl) OR (((aux70 AND NOT(
shift_asr) AND NOT(shift_ror)) OR aux5) AND aux169));
END;
